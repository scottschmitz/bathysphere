// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.buildConfig = [
        'compileSdk': 30,
        'javaSourceVersion': JavaVersion.VERSION_1_8,
        'minSdk': 21,
        'targetSdk': 30,
        'version': [
            'code': 1,
            'major': 0,
            'minor': 0,
            'patch': 1,
        ]
    ]
    ext.buildConfig.version['name'] = "${buildConfig.version.major}.${buildConfig.version.minor}.${buildConfig.version.patch}"

    ext.versions = [
        'compose': '1.0.0-alpha03',
        'dagger': '2.27',
        'kotlin': '1.4.0',
        'moshi': '1.9.3',
        'okhttp': '4.9.0',
        'retrofit': '2.8.1'
    ]

    ext.deps = [
        'accompanist': [
            'coil': 'dev.chrisbanes.accompanist:accompanist-coil:0.2.2',
        ],
        'androidX': [
            'appcompat': 'androidx.appcompat:appcompat:1.2.0',
            'coreKtx': 'androidx.core:core-ktx:1.3.1',
            'lifecycleKtx': 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-alpha07',
            'preference': 'androidx.preference:preference:1.1.1',
        ],
        'compose': [
            'material': "androidx.compose.material:material:${versions.compose}",
            'ui': "androidx.compose.ui:ui:${versions.compose}",
            'uiTooling': "androidx.ui:ui-tooling:${versions.compose}",
        ],
        'dagger': [
            'androidCompiler': "com.google.dagger:dagger-android-processor:${versions.dagger}",
            'androidRuntime': "com.google.dagger:dagger-android:${versions.dagger}",
            'androidSupport': "com.google.dagger:dagger-android-support:${versions.dagger}",
            'compiler': "com.google.dagger:dagger-compiler:${versions.dagger}",
            'runtime': "com.google.dagger:dagger:${versions.dagger}",
        ],
        'google': [
            'material': 'com.google.android.material:material:1.2.1',
            'signin': 'com.google.android.gms:play-services-auth:18.1.0',
        ],
        'kotlin': [
            'stdlib': "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
        ],
        'moshi': [
            'core': "com.squareup.moshi:moshi:${versions.moshi}",
            'kotlin': "com.squareup.moshi:moshi-kotlin:${versions.moshi}",
            'codegen': "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}",
        ],
        'okhttp': [
            'core': "com.squareup.okhttp3:okhttp:${versions.okhttp}",
            'loggingInterceptor': "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}",
        ],
        'retrofit': [
            'core': "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            'moshi': "com.squareup.retrofit2:converter-moshi:${versions.retrofit}",
            'rxjava': "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}",
        ],
        'timber': 'com.jakewharton.timber:timber:4.7.1',
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:4.2.0-alpha12"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    // Variables can't be used in 'plugins' block,
    // so duplication of detekt version string is unavoidable in Gradle Groovy DSL for now.
    // Others experiencing it:  https://github.com/gradle/gradle/issues/3593
    // Mozilla decided to live with the duplication:  https://github.com/mozilla-mobile/focus-android/issues/1886
    // Possible solution that requires changing to Gradle Kotlin DSL:  https://github.com/gradle/gradle/issues/1697
    id "io.gitlab.arturbosch.detekt" version "1.1.1"
    id 'com.adarshr.test-logger' version '1.7.0'
}

subprojects {
    //<editor-fold desc="detekt">
    def detektVersion = "1.1.1"

    apply plugin: 'io.gitlab.arturbosch.detekt'

    detekt {
        toolVersion = detektVersion
        config = files("$rootProject.projectDir/detekt-config.yml")
        baseline = file("$rootProject.projectDir/detekt-baseline.xml")

        reports {
            html {
                enabled = true
                destination = file("$project.buildDir/reports/detekt.html")
            }
            xml {
                enabled = false
            }
        }
    }

    // enable formatting rules
    dependencies {
        detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    }
    //</editor-fold>

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            allWarningsAsErrors = true
            jvmTarget = buildConfig.javaSourceVersion
        }
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
